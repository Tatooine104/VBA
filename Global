' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 07:44:35
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Имя:          Globals
' Тип:          Module
' Описание:     Методы общего назначения
' Обновлено:    2020.04.05 07:51:39 Шевченко    Добавлен метод [fn_Add_Symbols] - Добавить в начало строки символы до указанной длины
' Обновлено:    2020.04.05 09:26:39 Шевченко    Добавлен метод [sc_Column_Check] - Проверка колонки. Если существует - очистить, если не существует - создать
' Обновлено:    2020.04.05 09:34:59 Шевченко    Добавлен метод [fn_WorkSheet_Check] - Проверка существует ли лист
' Обновлено:    2020.04.05 09:55:35 Шевченко    Имя [fn_WorkSheet_Check] заменено на [fn_Sheet_Check]
' Обновлено:    2020.04.05 19:17:36 Шевченко    Добавлен метод [sc_Sheet_Clear] - Очистка указанного листа
' Обновлено:    2020.04.05 19:26:50 Шевченко    Добавлен метод [fn_Compare_Date] - Сравнение дат
' Обновлено:    2020.04.05 19:38:27 Шевченко    Добавлен метод [fn_Data_Get] - Данные с листа отправить в массив
' Обновлено:    2020.04.05 19:48:31 Шевченко    Добавлен метод [sc_Data_Manipulate] - Подхват данных с листа в массив или вставка данных на лист
' Обновлено:    2020.04.05 19:57:19 Шевченко    Добавлен метод [sc_Data_Set] - Вставка данных на лист
' Обновлено:    2020.04.05 20:18:00 Шевченко    Добавлен метод [sc_Delete_Fantom_Row] - Удалить пустую строку в таблице которая неизбежно возникает при вставке данных через [Data_Set]
' Обновлено:    2020.04.05 20:25:37 Шевченко    Добавлен метод [sc_Error_Logger] - Логирование ошибок
' Обновлено:    2020.04.06 06:13:31 Шевченко    Добавлен метод [sc_File_Delete] - Удалить указанный файл
' Обновлено:    2020.04.06 06:15:57 Шевченко    Добавлен метод [sc_File_Done] - Переименовать обработанный файл
' Обновлено:    2020.04.06 06:21:31 Шевченко    Добавлен метод [fn_Files_Names_Collection] - Создать коллекцию имен файлов найденных в указанной папке по маске
' Обновлено:    2020.04.06 06:25:19 Шевченко    Добавлен метод [fn_File_Open_Read_Only] - Открыть файл под чтением
' Обновлено:    2020.04.06 06:28:52 Шевченко    Добавлен метод [sc_Filters_Off_All] - Снять все фильтра
' Обновлено:    2020.04.06 06:46:39 Шевченко    Добавлен метод [sc_Filter_Set] - Установить фильтр в активной колонке по списку значений
' Обновлено:    2020.04.06 06:50:31 Шевченко    Добавлен метод [fn_Get_Edges] - Определить границы таблицы
' Обновлено:    2020.04.06 06:59:28 Шевченко    Добавлен метод [sc_Get_Files_Names] - Получить список файлов
' Обновлено:    2020.04.06 07:20:53 Шевченко    Добавлен метод [fn_Get_Id] - Получить номер элемента массива по его значению
' Обновлено:    2020.04.06 07:33:12 Шевченко    Добавлен метод [sc_Option_Create_Sheet] - Создать лист опций
' Обновлено:    2020.04.06 07:39:14 Шевченко    Добавлен метод [fn_Option_Get] - Получить сохраненное значение опции
' Обновлено:    2020.04.06 07:46:36 Шевченко    Добавлен метод [fn_Option_Set] - Сохранить значение опции
' Обновлено:    2020.04.06 07:54:36 Шевченко    Добавлен метод [fn_Refresh_Data] - Обновить подключенную таблицу с данными
' Обновлено:    2020.04.06 08:07:06 Шевченко    Добавлен метод [fn_Refresh_Table] - Обновить подключенную таблицу
' Обновлено:    2020.04.06 08:28:48 Шевченко    Добавлен метод [sc_Screen_Updating] - Включение/Отключение обновления экрана
' Обновлено:    2020.04.06 08:31:38 Шевченко    Добавлен метод [sc_String_In_TXT] - Записать строку в текстовый файл
' Обновлено:    2020.04.07 08:24:17 dmitry.shevchenko   Добавлен метод [fn_File_Exists] - Проверить существует ли файл
' Обновлено:    2020.04.07 09:36:30 dmitry.shevchenko   Добавил ссылку на конкретный модуль
' Обновлено:    2020.04.07 15:25:32 dmitry.shevchenko   В [fn_Add_Symbols] добавил необязательный параметр 'o_booWhere' - маркер отго где добавляем символы
' Обновлено:    2020.04.07 17:15:39 dmitry.shevchenko   Добавлен метод [sc_Clipboard_Send] - Отправить данные в буфер обмена
' Обновлено:    2020.04.12 08:32:08 dmitry.shevchenko   В [sc_Error_Logger] добавлено очистка ошибки
' Обновлено:    2020.04.12 10:41:39 dmitry.shevchenko   Добавлен метод [fn_Unique_Values] - Выбрать из указаного диапазона уникальные значения
' Обновлено:    2020.04.12 10:41:39 dmitry.shevchenko   Добавлен метод [fn_Week_Day_Name] - Получить имя дня недели на русском по номеру
' Обновлено:    2020.04.12 10:50:19 dmitry.shevchenko   Добавлен метод [fn_Month_Name] - Получить Русское название месяца по его номеру
' Обновлено:    2020.04.12 17:16:28 dmitry.shevchenko   Добавлен метод [sc_Create_Folder] - Создать папку
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Option Explicit
Private Const MODULEVERSION As Double = 1.037 ' Номер версии модуля

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 07:51:29
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Add_Symbols
' Тип:          Function
' Доступ:       Public
' Описание:     Добавить в начало строки символы до указанной длины
' Параметр:     strValue {String} - Значение к которому будем добавлять символы
' Параметр:     bytLength {Byte} - Конечная длина строки. Не более 255
' Параметр:     o_strSymbol {String} - Добавляемый символ
' Параметр:     o_booWhere {Boolean} - Где добавляем? True - в начале, False - в конце
' Вернёт:       String - Строка с добавленными в начало символами
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Add_Symbols(ByVal strValue As String, _
                               ByVal bytLength As Byte, _
                               Optional ByVal o_strSymbol As String = "0", _
                               Optional ByVal o_booWhere As Boolean = True) As String

On Error GoTo fn_Add_Symbols_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Dim strResult As String ' Результат работы функции
Dim lonInd As Long      ' Счетчик цикла
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    strResult = strValue ' Присвоить значение

    If Len(strValue) < bytLength Then ' Проверка количество символов
        
        For lonInd = 1 To bytLength - Len(strValue) ' Инициализация циклa
            
            If o_booWhere Then
            
                strResult = o_strSymbol & strResult  ' Добавляем нули в начале
                
            Else
            
                strResult = strResult & o_strSymbol  ' Добавляем нули в конце
                
            End If
            
            
        Next
        
    End If

    fn_Add_Symbols = strResult

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Add_Symbols_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Add_Symbols", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 19:26:37
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Compare_Date
' Тип:          Function
' Доступ:       Public
' Описание:     Сравнение дат
' Параметр:     r_varDates() {Variant} - Массив из 3 элементов: Дата которую проверить, наименьшая дата, наибольшая дата
' Вернёт:       Variant - Массив из 2 элементов - TRUE/FALSE и комментарий
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Compare_Date(ByRef r_varDates() As Variant) As Variant

On Error GoTo fn_Compare_Date_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim varResult As Variant: varResult = Array(False, "По умолчанию")

    If CDate(r_varDates(0)) < CDate(r_varDates(1)) Then
    
        varResult = Array(False, "Рано")
        
    ElseIf CDate(r_varDates(0)) > CDate(r_varDates(2)) Then
        
        varResult = Array(False, "Поздно")
        
    Else
        
        varResult = Array(True, "Ок")
        
    End If

    fn_Compare_Date = varResult

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Compare_Date_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Compare_Date", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 19:38:14
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Data_Get
' Тип:          Function
' Доступ:       Public
' Описание:     Данные с листа отправить в массив
' Параметр:     wshSheet (Worksheet) - Лист с которого будем брать данные
' Параметр:     lonStart (Long) - Первая строка таблицы
' Параметр:     lonEnd (Long) - Последняя строка таблицы
' Параметр:     strName (String) - Имя колонки из которой будем брать данные. Должно располагаться на 1 строке таблицы
' Параметр:     o_booCheck (Boolean) - Метка проверки колонки. True - очистка колонки если она есть, и создание если ее нет. False - не проверяется
' Вернёт:       Variant - Массив данных с листа
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Data_Get(ByVal wshSheet As Worksheet, _
                            ByVal lonStart As Long, _
                            ByVal lonEnd As Long, _
                            ByVal strName As String, _
                            Optional ByVal o_booCheck As Boolean = False) As Variant

On Error GoTo fn_Data_Get_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    If o_booCheck Then Call Globals.sc_Column_Check(wshSheet, strName, lonStart)  ' Если установлен индикатор проверки, то проверяем колонку

    Dim lonColumn As Long: lonColumn = wshSheet.Range(lonStart & ":" & lonStart).Find(strName, , , xlWhole).Column ' Ищем номер нужной колокнки по имени
    fn_Data_Get = wshSheet.Range(wshSheet.Cells(lonStart, lonColumn), wshSheet.Cells(lonEnd, lonColumn)) ' Превращает данные с листа в массив

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Data_Get_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Data_Get", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:21:18
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Files_Names_Collection
' Тип:          Function
' Доступ:       Public
' Описание:     Создать коллекцию имен файлов найденных в указанной папке по маске
' Параметр:     strFolder {String} - Папка в которой производить поиск
' Параметр:     strMask {String} - Маска поиска
' Параметр:     lonDeep {Long} - Глубина поиска в подпапках. Максимально 999
' Вернёт:       Collection - Коллекцию имен файлов
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Files_Names_Collection(ByVal strFolder As String, _
                                          ByVal strMask As String, _
                                          ByVal lonDeep As Long) As Collection

On Error Resume Next ' Игнорирование ошибки
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Set fn_Files_Names_Collection = New Collection ' Создаем коллекцию для имен файлов
    Dim objFSO As Object: Set objFSO = CreateObject("Scripting.FileSystemObject") ' Создаем объект взаимодействия с файловой системой
    Globals.sc_Get_Files_Names strFolder, strMask, objFSO, fn_Files_Names_Collection, lonDeep ' Производим поиск файлов в указанной папке, по указанной маске поиска
    Set objFSO = Nothing ': Application.StatusBar = False ' обнуляем объект для очистки памяти

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:25:08
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_File_Open_Read_Only
' Тип:          Function
' Доступ:       Public
' Описание:     Открыть файл под чтением
' Параметр:     strFile {String} - Полное уимя файла
' Вернёт:       Boolean - Результат проверки открылся файл или нет
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_File_Open_Read_Only(ByVal strFile As String) As Boolean

On Error GoTo fn_File_Open_Read_Only_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_File_Open_Read_Only = False

    Workbooks.Open filename:=strFile, Format:=6, Delimiter:=";", Local:=True, ReadOnly:=True ' Открываем файл под чтением

    fn_File_Open_Read_Only = True

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_File_Open_Read_Only_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_File_Open_Read_Only", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:50:25
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Get_Edges
' Тип:          Function
' Доступ:       Public
' Описание:     Определить границы таблицы
' Параметр:     wshSheet {Worksheet} - Лист с которым будем взаимодействовать
' Параметр:     strName {String} - Имя колонки по которой будем определять границу. Не должна содержать пустых строк
' Вернёт:       Long() - Массив из 2 элементов - верхняя граница и нижняя
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Get_Edges(ByVal wshSheet As Worksheet, _
                             ByVal strName As String) As Long()

On Error GoTo fn_Get_Edges_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim lonResult(1) As Long, lonI As Long, lCol As Long
    
    For lonI& = 1 To 1048576 ' Перебор строк на указанном листе

        If Not wshSheet.Range(lonI & ":" & lonI).Find(strName, , , xlWhole) Is Nothing Then lonResult(0) = lonI: Exit For ' Ищем в строке название колонки, при нахождении запоминаем номер строки и прерываем цикл
    
    Next lonI
    
    lCol = wshSheet.Range(lonResult(0) & ":" & lonResult(0)).Find(strName, , , xlWhole).Column ' Ищем номер колонки
    lonResult(1) = wshSheet.Range(wshSheet.Cells(lonResult(0), lCol), wshSheet.Cells(1048576, lCol)).Find("").Row ' Ищем пустую строку в этой колонке

    fn_Get_Edges = lonResult

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Get_Edges_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Get_Edges", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 07:20:26
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Get_Id
' Тип:          Function
' Доступ:       Public
' Описание:     Получить номер элемента массива по его значению
' Параметр:     varArray {Variant} - Массив элементов
' Параметр:     strValue {String} - Искомое значение
' Вернёт:       Long - Номер элемента массива
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Get_Id(ByVal varArray As Variant, _
                          ByVal strValue As String) As Long

On Error GoTo fn_Get_Id_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Get_Id = 0
    
    Dim lonI As Long
    
    For lonI = LBound(varArray) To UBound(varArray) ' цикл перебора элементов массива

        If varArray(lonI) = strValue Then ' Сравнение элента с искомым значением. При совпадении выход из цикла. Индекс элемента увеличиваем на 1 т.к. массив начинается с 0
        
            fn_Get_Id = lonI + 1
            Exit Function
            
        End If
        
    Next lonI

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Get_Id_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Get_Id", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 07:38:52
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Option_Get
' Тип:          Function
' Доступ:       Public
' Описание:     Получить сохраненное значение опции
' Параметр:     strOption {String} - Название опции
' Вернёт:       String - Значение опции
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Option_Get(ByVal strOption As String) As String

On Error GoTo fn_Option_Get_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Option_Get = "Опция не получена!" ' Значение по умолчанию

    fn_Option_Get = Worksheets("Опции").Cells(Worksheets("Опции").Range("A:A").Find(strOption, , , xlWhole).Row, 2).Value ' Поиск значения

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Option_Get_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Option_Get", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 07:46:13
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Option_Set
' Тип:          Function
' Доступ:       Public
' Описание:     Сохранить значение опции
' Параметр:     strOption {String} - Имя опции
' Параметр:     strValue {String} - Значение опции
' Вернёт:       Boolean - True/False взависимости от того удалось сохранить или нет
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Option_Set(ByVal strOption As String, _
                              ByVal strValue As String) As Boolean

On Error GoTo fn_Option_Set_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Option_Set = False ' Значение по умолчанию
    
    Dim booCheck As Boolean, lonRow As Long
    
    booCheck = fn_Sheet_Check("Опции") ' Проверяем что лист с опции существует
    
    If Not booCheck Then sc_Option_Create_Sheet ' Если лист опций не существует то создаем его

    If Not Worksheets("Опции").Range("A:A").Find(strOption, , , xlWhole) Is Nothing Then ' Поиск такой опции
    
        Worksheets("Опции").Cells(Worksheets("Опции").Range("A:A").Find(strOption, , , xlWhole).Row, 2).Value = strValue ' Если опция найдена, то присваеваем новое значние
        
    Else
    
        lonRow = Worksheets("Опции").Range("A:A").Find("", , , xlWhole).Row ' Если опция не найдена, ищем пустую строку
        Worksheets("Опции").Cells(lonRow, 1).Value = strOption ' Вписываем название опции
        Worksheets("Опции").Cells(lonRow, 2).Value = strValue ' Вписываем значение опции
        
    End If

    fn_Option_Set = True ' Возвращаем положительное значение

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Option_Set_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Option_Set", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 07:54:22
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Refresh_Data
' Тип:          Function
' Доступ:       Public
' Описание:     Обновить подключенную таблицу с данными
' Параметр:     wshSheet {Worksheet} - Лист на котором обновляемая таблица
' Параметр:     strTable {String} - Обновляемая таблица
' Параметр:     strOption {String} - Название опции которая хранит время последнего обновления
' Параметр:     o_strTime {String} - Контрольное время обновления; По умолчанию: "09:00:00"
' Вернёт:       Boolean - True/False в зависимости от того удалось ли обновить или нет
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Refresh_Data(ByVal wshSheet As Worksheet, _
                                ByVal strTable As String, _
                                ByVal strOption As String, _
                                Optional ByVal o_strTime As String = "09:00:00") As Boolean

On Error GoTo fn_Refresh_Data_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Refresh_Data = False ' Значение по умолчанию

    Dim strMark As String, booCheck As Boolean, booTime As Boolean
    
    strMark = fn_Option_Get(strOption) ' Получаем опцию - время последнего обновления
    
    If CDate(strMark) < Date Or (CDate(Now - Date) > CDate(o_strTime) And CDate(strMark) < CDate(o_strTime)) Then ' Сравниваем контрольное время со временем последненго обновления
    
        wshSheet.Visible = xlSheetVisible ' Делаем лист с которым будем взаимодействовать видимым
        wshSheet.Activate ' Переходим на этот лист
        booCheck = Globals.fn_Refresh_Table(Range(strTable).ListObject.QueryTable) ' Обновляем таблицу
        
        If booCheck Then ' Проверяем что таблица действительно обновилась
        
            booTime = fn_Option_Set(strOption, Now()) ' Сохраняем время последнего обновления
            
        End If
    
    End If
    
    wshSheet.Visible = xlSheetHidden ' Скрываем лист

    fn_Refresh_Data = True ' Возвращаем положительное значение

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Refresh_Data_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Refresh_Data", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 08:07:02
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Refresh_Table
' Тип:          Function
' Доступ:       Public
' Описание:     Обновить подключенную таблицу
' Параметр:     objTable {Object} - Таблица которую нужно обновить
' Вернёт:       Boolean - True/False - в зависимости от того удалось ли обновить таблицу или нет
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Refresh_Table(ByVal objTable As Object) As Boolean

On Error GoTo fn_Refresh_Table_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim bytTry As Byte: bytTry = 0 ' Поле для хранения счета количества попыток обновления

    fn_Refresh_Table = False

mainaction:

    objTable.Refresh BackgroundQuery:=False ' Обновляем таблицу

    fn_Refresh_Table = True

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Refresh_Table_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Refresh_Table", MODULEVERSION)  ' Вызов обработчика ошибок

Application.Wait Time:=Now + TimeSerial(0, 1, 0) ' Ожидаем одну минуту
bytTry = bytTry + 1 ' Увеличиваем счетчик попыток
If bytTry < 5 Then GoTo mainaction ' Если совершено менее 5 попыток то пробуем еще раз

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 09:34:51
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Sheet_Check
' Тип:          Function
' Доступ:       Public
' Описание:     Проверка существует ли лист
' Параметр:     strName {String} - Имя листа который нужно проверить
' Вернёт:       Boolean - Результат проверки существует ли лист или нет
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Sheet_Check(ByVal strName As String) As Boolean

On Error GoTo fn_Sheet_Check_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Sheet_Check = False

    Dim objSheet As Worksheet: Set objSheet = Worksheets(strName)

    fn_Sheet_Check = True

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Sheet_Check_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Sheet_Check", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 09:26:26
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Column_Check
' Тип:          Sub
' Доступ:       Public
' Описание:     Проверка колонки. Если существует - очистить, если не существует - создать
' Параметр:     objSheet {Object} - Лист на котром нужно проверить колонку
' Параметр:     strName {String} - Имя проверяемой колонки
' Параметр:     lonRow {Long} - Номер строки где находится шапка таблицы
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Column_Check(ByVal objSheet As Object, _
                           ByVal strName As String, _
                           ByVal lonRow As Long)

On Error GoTo sc_Column_Check_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

        If Not objSheet.Range(lonRow & ":" & lonRow).Find(strName, , , xlWhole) Is Nothing Then ' ищем в указанной строке нужное значение
        
            objSheet.Range(lonRow & ":" & lonRow).Find(strName, , , xlWhole).EntireColumn.ClearContents ' Если нашли колонку, то стираем все данные из нее
            objSheet.Cells(lonRow, objSheet.Range(lonRow & ":" & lonRow).Find("", , , xlWhole).Column).Value = strName ' Заново вписываем на лист имя колонки
            
        Else ' Если колонка не существует
        
            objSheet.Cells(lonRow, objSheet.Range(lonRow & ":" & lonRow).Find("").Column).Value = strName ' Ищем в указанной строке пустую ячейку и вписываем имя колонки
        
        End If
        
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Column_Check_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Column_Check", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 19:48:26
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Data_Manipulate
' Тип:          Sub
' Доступ:       Public
' Описание:     Подхват данных с листа в массив или вставка данных на лист
' Параметр:     r_varTable (Variant) - Массив данных
' Параметр:     wshSheet (Worksheet) - Лист с которым будем взаимодействовать
' Параметр:     varNames (Variant) - Массив имен столбцов с которыми будем взаимодействовать
' Параметр:     varPaste (Variant) - Имена столбцов для вставки
' Параметр:     varFormat (Variant) - Форматы колонок при вставке
' Параметр:     o_booPickup (Boolean) - True - с листа в массив. False - из массива на лист; По умолчанию - True
' Параметр:     o_booCheck (Boolean) - Метка проверки колонки. True - пороверяем. False - нет; По умолчанию - False
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Data_Manipulate(ByRef r_varTable As Variant, _
                              ByVal wshSheet As Worksheet, _
                              ByVal varNames As Variant, _
                              ByVal varPaste As Variant, _
                              ByVal varFormat As Variant, _
                              Optional ByVal o_booPickup As Boolean = "True", _
                              Optional ByVal o_booCheck As Boolean = "False")

On Error GoTo sc_Data_Manipulate_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ReDim lonBorders(1) As Long: lonBorders = Globals.fn_Get_Edges(wshSheet, varNames(0)) ' Определяем первую и последнии строки в таблице

    Dim o_booCheckColumn As Boolean, lonI As Long
    
    For lonI = LBound(r_varTable) To UBound(r_varTable) ' Перебор столбцов
        
        o_booCheckColumn = False ' Ставим метку что колонку проверять не нужно
        Dim sFormat As String: sFormat = "-" ' Формат по умолчанию не меняем
        Dim lId As Long: lId = Globals.fn_Get_Id(varPaste, varNames(lonI - 1)) - 1 ' Получаем индекс имени колонки в списке расчетных колонок
        
        If lId > -1 Then ' Сравниваем имя обрабатываемой колонки со списком расчетных колонок
        
            If o_booCheck Then o_booCheckColumn = True ' Если стоит метка о необходимости проверки колокнки то ставим метку проверки колонки
            If Not o_booPickup Then sFormat = varFormat(lId) ' Если это вставка данных, то указываем формат вставки данных
            
        End If
        
        If o_booPickup Then ' Проверяем какое действие нужно совершить
        
            r_varTable(lonI) = Globals.fn_Data_Get(wshSheet, lonBorders(0), lonBorders(1), varNames(lonI - 1), o_booCheckColumn) ' Отправляем данные с листа в массив
            
        Else ' Если данные нужно вставить на лист
        
            Call Globals.sc_Data_Set(wshSheet, lonBorders(0), varNames(lonI - 1), r_varTable(lonI), sFormat, o_booCheckColumn) ' Вставляем данные на лист
            
        End If
    
    Next lonI
    
    If Not o_booPickup Then Call Globals.sc_Delete_Fantom_Row(wshSheet, varNames(0)) ' Стираем последнюю пустую строку которая появляется после вставки данных на лист
    
    Erase lonBorders

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Data_Manipulate_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Data_Manipulate", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 19:56:49
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Data_Set
' Тип:          Sub
' Доступ:       Public
' Описание:     Вставка данных на лист
' Параметр:     wshSheet (Worksheet) - Лист с которым будем взаимодействовать
' Параметр:     lonStart (Long) - Первая строка с которой начинается таблица
' Параметр:     strName (String) - Имя колонки для вставки данных
' Параметр:     varTable (Variant) - Массив для вставки
' Параметр:     strFormat (String) - Формат вставки
' Параметр:     o_booCheck (Boolean) - Метка проверки колонки; По умолчанию - False
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Data_Set(ByVal wshSheet As Worksheet, _
                       ByVal lonStart As Long, _
                       ByVal strName As String, _
                       ByVal varTable As Variant, _
                       ByVal strFormat As String, _
                       Optional ByVal o_booCheck As Boolean = False)

On Error GoTo sc_Data_Set_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    If o_booCheck Then Call Globals.sc_Column_Check(wshSheet, strName, lonStart)  ' Проверяем колонку если метка = True

    Dim bFormatMark As Boolean: bFormatMark = False
    Dim sNewFormat As String: sNewFormat = "@"
    
    Dim lColumnNum As Long: lColumnNum = wshSheet.Range(lonStart & ":" & lonStart).Find(strName, , , xlWhole).Column ' Ищем номер колонки куда будем вставлять данные
    
    Select Case strFormat ' Проверяем формат вставляемых данных7
    
            Case "Text" ' Текстовый формат
                    sNewFormat = "@"
                    bFormatMark = True
                    
            Case "All" ' Общий формат
                    sNewFormat = "General"
                    bFormatMark = True
                    
            Case "Number" ' Целые числа
                    sNewFormat = "0"
                    bFormatMark = True
                    
            Case "0.00" ' Числа до сотых
                    sNewFormat = "0.00"
                    bFormatMark = True
                    
            Case "Date" ' Дата
                    sNewFormat = "m/d/yyyy"
                    bFormatMark = True
                    
            Case "Money" ' Финансовый
                    sNewFormat = "_($* #,##0.00_);_($* (#,##0.00);_($* ""-""??_);_(@_)"
                    bFormatMark = True
                    
    End Select
        
    If bFormatMark Then wshSheet.Range(wshSheet.Cells(lonStart, lColumnNum), wshSheet.Cells(lonStart + UBound(varTable) - 1, lColumnNum)).NumberFormat = sNewFormat ' диапазон куда будем вставлять преобразуем в нужный формат
    wshSheet.Range(wshSheet.Cells(lonStart, lColumnNum), wshSheet.Cells(lonStart + UBound(varTable) - 1, lColumnNum)) = varTable ' вставляем данные

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Data_Set_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Data_Set", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 20:17:50
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Delete_Fantom_Row
' Тип:          Sub
' Доступ:       Public
' Описание:     Удалить пустую строку в таблице которая неизбежно возникает при вставке данных через [Data_Set]
' Параметр:     wshSheet {Worksheet} - Лист с которым будем взаимодействовать
' Параметр:     strName {String} - Им колонки по которой будет определяться граница таблицы. Не должно содеражать пустых строк и жедательно не быть первой на листе
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Delete_Fantom_Row(ByVal wshSheet As Worksheet, _
                                ByVal strName As String)

On Error GoTo sc_Delete_Fantom_Row_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim lonI As Long, lonColumn As Long, lonFantom As Long

    For lonI = 1 To 1048576 ' Передираем строки листа

        If Not wshSheet.Range(lonI & ":" & lonI).Find(strName, , , xlWhole) Is Nothing Then Exit For ' Когда в строке находим искомую колонку прерываем цикл
    
    Next lonI
    
    lonColumn = wshSheet.Range(lonI & ":" & lonI).Find(strName, , , xlWhole).Column ' Надим номер колонки по которой определим границы таблицы
    lonFantom = wshSheet.Range(wshSheet.Cells(lonI, lonColumn), wshSheet.Cells(1048576, lonColumn)).Find("").Row ' Находим фантомную строку
    wshSheet.Rows(lonFantom & ":" & lonFantom).Delete Shift:=xlUp ' Удаляем фантомнуй строку

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Delete_Fantom_Row_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Delete_Fantom_Row", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 20:25:35
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Error_Logger
' Тип:          Sub
' Доступ:       Public
' Описание:     Логирование ошибок
' Параметр:     objError {Object} - Объект ошибки
' Параметр:     strModule {String} - Имя модуля где произошла ошибка
' Параметр:     strMethod {String} - Имя объекта где произошла ошибка
' Параметр:     o_douVersion {Double} - Номер версии модуля ; По умолчанию: "0"
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Error_Logger(ByVal objError As Object, _
                           ByVal strModule As String, _
                           ByVal strMethod As String, _
                           Optional ByVal o_douVersion As Double = "0")

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Dim strText As String ' Записываемый текст
Dim strFile As String ' Имя файла
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    strText = Now() & vbTab & _
              ActiveWorkbook.Name & vbTab & _
              Environ("COMPUTERNAME") & vbTab & _
              Environ("USERNAME") & vbTab & _
              strModule & vbTab & _
              o_douVersion & vbTab & _
              strMethod & vbTab & _
              objError.Number & vbTab & _
              Replace(objError.Description, vbNewLine, " | ") & vbTab & _
              objError.Source
    
    strFile = ThisWorkbook.Path & "\Журнал ошибок.txt"
    
    Call Globals.sc_String_In_TXT(strText, strFile)

    Err.Clear

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:13:26
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_File_Delete
' Тип:          Sub
' Доступ:       Public
' Описание:     Удалить указанный файл
' Параметр:     strFile {String} - Полное имя файла
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_File_Delete(ByVal strFile As String)

On Error GoTo sc_File_Delete_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Kill strFile ' Удаляем файл

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_File_Delete_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_File_Delete", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:15:50
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_File_Done
' Тип:          Sub
' Доступ:       Public
' Описание:     Переименовать обработанный файл
' Параметр:     strFile {String} - Полное имя файла
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_File_Done(ByVal strFile As String)

On Error GoTo sc_File_Done_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim strNew As String
    
    strNew = Left(strFile, Len(strFile) - InStr(StrReverse(strFile), "\")) & "\" & Environ("USERNAME") & " " & Right(strFile, InStr(StrReverse(strFile), "\") - 1) ' Новое имя файла
    
    Name strFile As strNew ' Переименовываем вставляя в начало имени файла - имя юзера обработавшего файл

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_File_Done_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_File_Done", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:28:44
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Filters_Off_All
' Тип:          Sub
' Доступ:       Public
' Описание:     Снять все фильтра
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Filters_Off_All()

On Error GoTo sc_Filters_Off_All_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    If ActiveSheet.FilterMode Then ActiveSheet.ShowAllData

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Filters_Off_All_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Filters_Off_All", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:46:31
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Filter_Set
' Тип:          Sub
' Доступ:       Public
' Описание:     Установить фильтр в активной колонке по списку значений
' Параметр:     r_strValues() {String} - Массив значений фильтра
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Filter_Set(ByRef r_strValues() As String)

On Error GoTo sc_Filter_Set_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ActiveSheet.UsedRange.AutoFilter Field:=ActiveCell.Column, Criteria1:=r_strValues, Operator:=xlFilterValues ' Ставим фильтр

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Filter_Set_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Filter_Set", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 06:59:27
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Get_Files_Names
' Тип:          Sub
' Доступ:       Public
' Описание:     Получить список файлов
' Параметр:     strFolder {String} - Папка в которой нужно произвести поиск
' Параметр:     strMask {String} - Маска поиска
' Параметр:     r_objFso {Object} - Объект взаимодействия с файловой системой
' Параметр:     r_colFiles {Collection} - Коллекция имен файлов
' Параметр:     intDeep {Integer} - Глубина поиска в подпапках
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Get_Files_Names(ByVal strFolder As String, _
                              ByVal strMask As String, _
                              ByRef r_objFso As Object, _
                              ByRef r_colFiles As Collection, _
                              ByVal intDeep As Integer)

On Error Resume Next ' Игнорирование ошибки
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim objCurFold As Object, objFile As Object, objFol As Object
    
    Set objCurFold = r_objFso.GetFolder(strFolder)
    
    If Not objCurFold Is Nothing Then ' Проверяем что папка существует и в ней есть что-то
    
        For Each objFile In objCurFold.Files ' Перебор элемеетов в папке
        
            If objFile.Path Like "*" & strMask & "*" Then r_colFiles.Add objFile.Path ' Сравнение найденого элемента с маской поиска
            
        Next
        
        intDeep = intDeep - 1 ' Уменьшаем глубину поиска
        
        If intDeep Then
        
            For Each objFol In objCurFold.SubFolders
            
                sc_Get_Files_Names objFol.Path, strMask, r_objFso, r_colFiles, intDeep
                
            Next
            
        End If
        
        Set objFile = Nothing: Set objCurFold = Nothing: Set objFol = Nothing ' Удаляем объекты очищаем память
        
    End If

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 07:33:02
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Option_Create_Sheet
' Тип:          Sub
' Доступ:       Public
' Описание:     Создать лист опций
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Option_Create_Sheet()

On Error GoTo sc_Option_Create_Sheet_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Worksheets.Add.Name = "Опции" ' Создаем лист
    Worksheets("Опции").Range("A1:B1") = Array("Опция", "Значение") ' Создаем таблицу опций
    Worksheets("Опции").Visible = False ' Скрываем лист

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Option_Create_Sheet_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Option_Create_Sheet", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 08:28:30
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Screen_Updating
' Тип:          Sub
' Доступ:       Public
' Описание:     Включение/Отключение обновления экрана
' Параметр:     booAct {Boolean} - Выполняемое действие. True - включить обновление. False - отключаем
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Screen_Updating(ByVal booAct As Boolean)

On Error GoTo sc_Screen_Updating_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Application.ScreenUpdating = booAct
    Application.ShowWindowsInTaskbar = booAct
    Application.AskToUpdateLinks = booAct
    Application.DisplayAlerts = booAct
    Application.EnableEvents = booAct
    Application.DisplayStatusBar = booAct
    
    If booAct Then
    
        Application.EnableCancelKey = xlInterrupt
        Application.Calculation = xlCalculationAutomatic
        Application.DisplayCommentIndicator = xlCommentAndIndicator
        
    Else
    
        Application.EnableCancelKey = xlDisabled
        Application.Calculation = xlCalculationManual
        Application.DisplayCommentIndicator = xlNoIndicator
        
    End If

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Screen_Updating_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Screen_Updating", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.05 19:17:30
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Sheet_Clear
' Тип:          Sub
' Доступ:       Public
' Описание:     Очистка указанного листа
' Параметр:     objSheet {Object} - Лист на котором будем удалять данные
' Параметр:     lonRow {Long} - Номер строки с которой будем очищать
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Sheet_Clear(ByVal objSheet As Object, _
                          ByVal lonRow As Long)

On Error GoTo sc_Sheet_Clear_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    lonRow = IIf(objSheet.UsedRange.Rows.Count > lonRow, objSheet.UsedRange.Rows.Count, lonRow + 1)
    objSheet.Rows(lonRow & ":" & lonRow).Delete Shift:=xlUp

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Sheet_Clear_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Sheet_Clear", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.06 08:31:29
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_String_In_TXT
' Тип:          Sub
' Доступ:       Public
' Описание:     Записать строку в текстовый файл
' Параметр:     strText {String} - Записываемая строка
' Параметр:     strFile {String} - Полное имя файла
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_String_In_TXT(ByVal strText As String, _
                            ByVal strFile As String)

'On Error Resume Next: Exit Sub ' Выход из процедуры
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim objFSO As Object, objTextFile As Object
    
    Set objFSO = CreateObject("scripting.filesystemobject") ' Создаем объект взаимоействия с файловой системой
    Set objTextFile = objFSO.OpenTextFile(strFile, 8, True) ' Открываем файл
    
    objTextFile.Write vbNewLine & strText: objTextFile.Close ' Записываем строку
    
    Set objTextFile = Nothing: Set objFSO = Nothing ' Чистим память

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.07 08:24:09
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_File_Exists
' Тип:          Function
' Доступ:       Public
' Описание:     Проверить существует ли файл
' Параметр:     strFile {String} - Полное имя файла
' Вернёт:       Boolean - True/False, в зависимости от того существует ли файл
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_File_Exists(ByVal strFile As String) As Boolean

On Error GoTo fn_File_Exists_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_File_Exists = Len(Dir(strFile)) > 0 ' Проверяем существует ли файл

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_File_Exists_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "fn_File_Exists", MODULEVERSION)  ' Вызов обработчика ошибок

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.07 17:15:31
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Clipboard_Send
' Тип:          Sub
' Доступ:       Public
' Описание:     Отправить данные в буфер обмена
' Параметр:     strText {String} - Текст отправляемый в буфер
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Clipboard_Send(ByVal strText As String)

On Error GoTo sc_Clipboard_Send_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim objClip As Object: Set objClip = GetObject("New:1C3B4210-F441-11CE-B9EA-00AA006B1A69")
    objClip.SetText strText: objClip.PutInClipboard

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Clipboard_Send_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Clipboard_Send", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Автор:        Шевченко
' Создано:      31.03.2020 07:33
' Название:     fn_Unique_Values
' Описание:     Выбрать из указаного диапазона уникальные значения
' Тип:          Function
' Доступ:       Public
' Возвращает:   Variant()
' objRange (Range): Диапазон из которого выбирать уникальные значения
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Unique_Values(ByVal objRange As Range) As Variant()

    Dim vResult() As Variant, lIndex As Long, sText As String, vTemp As Variant
    vResult = Intersect(objRange.Parent.UsedRange, objRange).Value
    
    On Error Resume Next: Err.Clear
    
    With New Collection
    
        For Each vTemp In vResult()
        
            If TypeName(vTemp) = "Boolean" Then vTemp = IIf(vTemp, "ИСТИНА", "ЛОЖЬ")
        
            sText = Trim(vTemp)
            
            If Len(sText) > 0 Then
            
              If IsEmpty(.Item(sText)) Then
              
                For lIndex = 1 To .Count
                
                  If sText < .Item(lIndex) Then Exit For
                  
                Next
                
                  If lIndex > .Count Then .Add sText, sText Else .Add sText, sText, Before:=lIndex
                  
              End If
              
            End If
            
        Next
        
        ReDim vResult(1 To .Count)
        
        For lIndex = 1 To .Count
        
            vResult(lIndex) = .Item(lIndex)
            
        Next
        
    End With

    fn_Unique_Values = vResult

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.12 10:37:28
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Week_Day_Name
' Тип:          Function
' Доступ:       Public
' Описание:     Получить имя дня недели на русском по номеру
' Параметр:     bytDay {Byte} - Номер дня недели от 1 до 7
' Вернёт:       String - День недели
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Week_Day_Name(ByVal bytDay As Byte) As String

On Error GoTo fn_Week_Day_Name_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ReDim strArray(1 To 7) As String
    strArray(1) = "Понедельник"
    strArray(2) = "Вторник"
    strArray(3) = "Среда"
    strArray(4) = "Четверг"
    strArray(5) = "Пятница"
    strArray(6) = "Суббота"
    strArray(7) = "Воскресенье"
    
    fn_Week_Day_Name = strArray(bytDay)

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Week_Day_Name_Error: ' Инструкции что делать при ошибке

fn_Week_Day_Name = CStr(bytDay)

End Function
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.12 10:50:11
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     fn_Month_Name
' Тип:          Function
' Доступ:       Public
' Описание:     Получить Русское название месяца по его номеру
' Параметр:     bytMonth {Byte} - Номер месяца от 1 до 12
' Вернёт:       String - Имя месяца
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Month_Name(ByVal bytMonth As Byte) As String

On Error GoTo fn_Month_Name_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ReDim strArray(1 To 12) As String
          strArray(1) = "Январь"
          strArray(2) = "Февраль"
          strArray(3) = "Март"
          strArray(4) = "Апрель"
          strArray(5) = "Май"
          strArray(6) = "Июнь"
          strArray(7) = "Июль"
          strArray(8) = "Август"
          strArray(9) = "Сентябрь"
          strArray(10) = "Октябрь"
          strArray(11) = "Ноябрь"
          strArray(12) = "Декабрь"
          
    fn_Month_Name = strArray(bytMonth)

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Завершение работы

fn_Month_Name_Error: ' Инструкции что делать при ошибке

fn_Month_Name = CStr(bytMonth)

End Function
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Создано:      2020.04.12 17:16:20
' Создатель:    Шевченко Дмитрий <primalevil@gmail.com>
' Название:     sc_Create_Folder
' Тип:          Sub
' Доступ:       Public
' Описание:     Создать папку
' Параметр:     strPath {String} - Путь к папке
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Create_Folder(ByVal strPath As String)

On Error GoTo sc_Create_Folder_Error ' При ошибке переход по метке
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Dim objFSO As Object
Dim varTemp As Variant
Dim intI As Integer
Dim strTemp As String

    Set objFSO = CreateObject("Scripting.FileSystemObject")

    varTemp = Split(strPath, "\")
    strTemp = ""
    
    For intI = 0 To UBound(varTemp)
        If varTemp(intI) <> "" Then
            strTemp = strTemp & varTemp(intI) & "\"
                If objFSO.FolderExists(strTemp) = False Then MkDir strTemp
        End If
    Next

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Завершение работы

sc_Create_Folder_Error: ' Инструкции что делать при ошибке

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Create_Folder", MODULEVERSION)  ' Вызов обработчика ошибок

End Sub
