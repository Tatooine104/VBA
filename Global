' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 07:44:35
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Èìÿ:          Globals
' Òèï:          Module
' Îïèñàíèå:     Ìåòîäû îáùåãî íàçíà÷åíèÿ
' Îáíîâëåíî:    2020.04.05 07:51:39 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Add_Symbols] - Äîáàâèòü â íà÷àëî ñòðîêè ñèìâîëû äî óêàçàííîé äëèíû
' Îáíîâëåíî:    2020.04.05 09:26:39 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Column_Check] - Ïðîâåðêà êîëîíêè. Åñëè ñóùåñòâóåò - î÷èñòèòü, åñëè íå ñóùåñòâóåò - ñîçäàòü
' Îáíîâëåíî:    2020.04.05 09:34:59 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_WorkSheet_Check] - Ïðîâåðêà ñóùåñòâóåò ëè ëèñò
' Îáíîâëåíî:    2020.04.05 09:55:35 Øåâ÷åíêî    Èìÿ [fn_WorkSheet_Check] çàìåíåíî íà [fn_Sheet_Check]
' Îáíîâëåíî:    2020.04.05 19:17:36 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Sheet_Clear] - Î÷èñòêà óêàçàííîãî ëèñòà
' Îáíîâëåíî:    2020.04.05 19:26:50 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Compare_Date] - Ñðàâíåíèå äàò
' Îáíîâëåíî:    2020.04.05 19:38:27 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Data_Get] - Äàííûå ñ ëèñòà îòïðàâèòü â ìàññèâ
' Îáíîâëåíî:    2020.04.05 19:48:31 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Data_Manipulate] - Ïîäõâàò äàííûõ ñ ëèñòà â ìàññèâ èëè âñòàâêà äàííûõ íà ëèñò
' Îáíîâëåíî:    2020.04.05 19:57:19 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Data_Set] - Âñòàâêà äàííûõ íà ëèñò
' Îáíîâëåíî:    2020.04.05 20:18:00 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Delete_Fantom_Row] - Óäàëèòü ïóñòóþ ñòðîêó â òàáëèöå êîòîðàÿ íåèçáåæíî âîçíèêàåò ïðè âñòàâêå äàííûõ ÷åðåç [Data_Set]
' Îáíîâëåíî:    2020.04.05 20:25:37 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Error_Logger] - Ëîãèðîâàíèå îøèáîê
' Îáíîâëåíî:    2020.04.06 06:13:31 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_File_Delete] - Óäàëèòü óêàçàííûé ôàéë
' Îáíîâëåíî:    2020.04.06 06:15:57 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_File_Done] - Ïåðåèìåíîâàòü îáðàáîòàííûé ôàéë
' Îáíîâëåíî:    2020.04.06 06:21:31 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Files_Names_Collection] - Ñîçäàòü êîëëåêöèþ èìåí ôàéëîâ íàéäåííûõ â óêàçàííîé ïàïêå ïî ìàñêå
' Îáíîâëåíî:    2020.04.06 06:25:19 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_File_Open_Read_Only] - Îòêðûòü ôàéë ïîä ÷òåíèåì
' Îáíîâëåíî:    2020.04.06 06:28:52 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Filters_Off_All] - Ñíÿòü âñå ôèëüòðà
' Îáíîâëåíî:    2020.04.06 06:46:39 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Filter_Set] - Óñòàíîâèòü ôèëüòð â àêòèâíîé êîëîíêå ïî ñïèñêó çíà÷åíèé
' Îáíîâëåíî:    2020.04.06 06:50:31 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Get_Edges] - Îïðåäåëèòü ãðàíèöû òàáëèöû
' Îáíîâëåíî:    2020.04.06 06:59:28 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Get_Files_Names] - Ïîëó÷èòü ñïèñîê ôàéëîâ
' Îáíîâëåíî:    2020.04.06 07:20:53 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Get_Id] - Ïîëó÷èòü íîìåð ýëåìåíòà ìàññèâà ïî åãî çíà÷åíèþ
' Îáíîâëåíî:    2020.04.06 07:33:12 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Option_Create_Sheet] - Ñîçäàòü ëèñò îïöèé
' Îáíîâëåíî:    2020.04.06 07:39:14 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Option_Get] - Ïîëó÷èòü ñîõðàíåííîå çíà÷åíèå îïöèè
' Îáíîâëåíî:    2020.04.06 07:46:36 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Option_Set] - Ñîõðàíèòü çíà÷åíèå îïöèè
' Îáíîâëåíî:    2020.04.06 07:54:36 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Refresh_Data] - Îáíîâèòü ïîäêëþ÷åííóþ òàáëèöó ñ äàííûìè
' Îáíîâëåíî:    2020.04.06 08:07:06 Øåâ÷åíêî    Äîáàâëåí ìåòîä [fn_Refresh_Table] - Îáíîâèòü ïîäêëþ÷åííóþ òàáëèöó
' Îáíîâëåíî:    2020.04.06 08:28:48 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_Screen_Updating] - Âêëþ÷åíèå/Îòêëþ÷åíèå îáíîâëåíèÿ ýêðàíà
' Îáíîâëåíî:    2020.04.06 08:31:38 Øåâ÷åíêî    Äîáàâëåí ìåòîä [sc_String_In_TXT] - Çàïèñàòü ñòðîêó â òåêñòîâûé ôàéë
' Îáíîâëåíî:    2020.04.07 08:24:17 dmitry.shevchenko   Äîáàâëåí ìåòîä [fn_File_Exists] - Ïðîâåðèòü ñóùåñòâóåò ëè ôàéë
' Îáíîâëåíî:    2020.04.07 09:36:30 dmitry.shevchenko   Äîáàâèë ññûëêó íà êîíêðåòíûé ìîäóëü
' Îáíîâëåíî:    2020.04.07 15:25:32 dmitry.shevchenko   Â [fn_Add_Symbols] äîáàâèë íåîáÿçàòåëüíûé ïàðàìåòð 'o_booWhere' - ìàðêåð îòãî ãäå äîáàâëÿåì ñèìâîëû
' Îáíîâëåíî:    2020.04.07 17:15:39 dmitry.shevchenko   Äîáàâëåí ìåòîä [sc_Clipboard_Send] - Îòïðàâèòü äàííûå â áóôåð îáìåíà
' Îáíîâëåíî:    2020.04.12 08:32:08 dmitry.shevchenko   Â [sc_Error_Logger] äîáàâëåíî î÷èñòêà îøèáêè
' Îáíîâëåíî:    2020.04.12 10:41:39 dmitry.shevchenko   Äîáàâëåí ìåòîä [fn_Unique_Values] - Âûáðàòü èç óêàçàíîãî äèàïàçîíà óíèêàëüíûå çíà÷åíèÿ
' Îáíîâëåíî:    2020.04.12 10:41:39 dmitry.shevchenko   Äîáàâëåí ìåòîä [fn_Week_Day_Name] - Ïîëó÷èòü èìÿ äíÿ íåäåëè íà ðóññêîì ïî íîìåðó
' Îáíîâëåíî:    2020.04.12 10:50:19 dmitry.shevchenko   Äîáàâëåí ìåòîä [fn_Month_Name] - Ïîëó÷èòü Ðóññêîå íàçâàíèå ìåñÿöà ïî åãî íîìåðó
' Îáíîâëåíî:    2020.04.12 17:16:28 dmitry.shevchenko   Äîáàâëåí ìåòîä [sc_Create_Folder] - Ñîçäàòü ïàïêó
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Option Explicit
Private Const MODULEVERSION As Double = 1.037 ' Íîìåð âåðñèè ìîäóëÿ

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 07:51:29
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Add_Symbols
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Äîáàâèòü â íà÷àëî ñòðîêè ñèìâîëû äî óêàçàííîé äëèíû
' Ïàðàìåòð:     strValue {String} - Çíà÷åíèå ê êîòîðîìó áóäåì äîáàâëÿòü ñèìâîëû
' Ïàðàìåòð:     bytLength {Byte} - Êîíå÷íàÿ äëèíà ñòðîêè. Íå áîëåå 255
' Ïàðàìåòð:     o_strSymbol {String} - Äîáàâëÿåìûé ñèìâîë
' Ïàðàìåòð:     o_booWhere {Boolean} - Ãäå äîáàâëÿåì? True - â íà÷àëå, False - â êîíöå
' Âåðí¸ò:       String - Ñòðîêà ñ äîáàâëåííûìè â íà÷àëî ñèìâîëàìè
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Add_Symbols(ByVal strValue As String, _
                               ByVal bytLength As Byte, _
                               Optional ByVal o_strSymbol As String = "0", _
                               Optional ByVal o_booWhere As Boolean = True) As String

On Error GoTo fn_Add_Symbols_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Dim strResult As String ' Ðåçóëüòàò ðàáîòû ôóíêöèè
Dim lonInd As Long      ' Ñ÷åò÷èê öèêëà
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    strResult = strValue ' Ïðèñâîèòü çíà÷åíèå

    If Len(strValue) < bytLength Then ' Ïðîâåðêà êîëè÷åñòâî ñèìâîëîâ
        
        For lonInd = 1 To bytLength - Len(strValue) ' Èíèöèàëèçàöèÿ öèêëa
            
            If o_booWhere Then
            
                strResult = o_strSymbol & strResult  ' Äîáàâëÿåì íóëè â íà÷àëå
                
            Else
            
                strResult = strResult & o_strSymbol  ' Äîáàâëÿåì íóëè â êîíöå
                
            End If
            
            
        Next
        
    End If

    fn_Add_Symbols = strResult

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Add_Symbols_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Add_Symbols", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 19:26:37
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Compare_Date
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ñðàâíåíèå äàò
' Ïàðàìåòð:     r_varDates() {Variant} - Ìàññèâ èç 3 ýëåìåíòîâ: Äàòà êîòîðóþ ïðîâåðèòü, íàèìåíüøàÿ äàòà, íàèáîëüøàÿ äàòà
' Âåðí¸ò:       Variant - Ìàññèâ èç 2 ýëåìåíòîâ - TRUE/FALSE è êîììåíòàðèé
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Compare_Date(ByRef r_varDates() As Variant) As Variant

On Error GoTo fn_Compare_Date_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim varResult As Variant: varResult = Array(False, "Ïî óìîë÷àíèþ")

    If CDate(r_varDates(0)) < CDate(r_varDates(1)) Then
    
        varResult = Array(False, "Ðàíî")
        
    ElseIf CDate(r_varDates(0)) > CDate(r_varDates(2)) Then
        
        varResult = Array(False, "Ïîçäíî")
        
    Else
        
        varResult = Array(True, "Îê")
        
    End If

    fn_Compare_Date = varResult

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Compare_Date_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Compare_Date", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 19:38:14
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Data_Get
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Äàííûå ñ ëèñòà îòïðàâèòü â ìàññèâ
' Ïàðàìåòð:     wshSheet (Worksheet) - Ëèñò ñ êîòîðîãî áóäåì áðàòü äàííûå
' Ïàðàìåòð:     lonStart (Long) - Ïåðâàÿ ñòðîêà òàáëèöû
' Ïàðàìåòð:     lonEnd (Long) - Ïîñëåäíÿÿ ñòðîêà òàáëèöû
' Ïàðàìåòð:     strName (String) - Èìÿ êîëîíêè èç êîòîðîé áóäåì áðàòü äàííûå. Äîëæíî ðàñïîëàãàòüñÿ íà 1 ñòðîêå òàáëèöû
' Ïàðàìåòð:     o_booCheck (Boolean) - Ìåòêà ïðîâåðêè êîëîíêè. True - î÷èñòêà êîëîíêè åñëè îíà åñòü, è ñîçäàíèå åñëè åå íåò. False - íå ïðîâåðÿåòñÿ
' Âåðí¸ò:       Variant - Ìàññèâ äàííûõ ñ ëèñòà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Data_Get(ByVal wshSheet As Worksheet, _
                            ByVal lonStart As Long, _
                            ByVal lonEnd As Long, _
                            ByVal strName As String, _
                            Optional ByVal o_booCheck As Boolean = False) As Variant

On Error GoTo fn_Data_Get_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    If o_booCheck Then Call Globals.sc_Column_Check(wshSheet, strName, lonStart)  ' Åñëè óñòàíîâëåí èíäèêàòîð ïðîâåðêè, òî ïðîâåðÿåì êîëîíêó

    Dim lonColumn As Long: lonColumn = wshSheet.Range(lonStart & ":" & lonStart).Find(strName, , , xlWhole).Column ' Èùåì íîìåð íóæíîé êîëîêíêè ïî èìåíè
    fn_Data_Get = wshSheet.Range(wshSheet.Cells(lonStart, lonColumn), wshSheet.Cells(lonEnd, lonColumn)) ' Ïðåâðàùàåò äàííûå ñ ëèñòà â ìàññèâ

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Data_Get_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Data_Get", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:21:18
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Files_Names_Collection
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ñîçäàòü êîëëåêöèþ èìåí ôàéëîâ íàéäåííûõ â óêàçàííîé ïàïêå ïî ìàñêå
' Ïàðàìåòð:     strFolder {String} - Ïàïêà â êîòîðîé ïðîèçâîäèòü ïîèñê
' Ïàðàìåòð:     strMask {String} - Ìàñêà ïîèñêà
' Ïàðàìåòð:     lonDeep {Long} - Ãëóáèíà ïîèñêà â ïîäïàïêàõ. Ìàêñèìàëüíî 999
' Âåðí¸ò:       Collection - Êîëëåêöèþ èìåí ôàéëîâ
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Files_Names_Collection(ByVal strFolder As String, _
                                          ByVal strMask As String, _
                                          ByVal lonDeep As Long) As Collection

On Error Resume Next ' Èãíîðèðîâàíèå îøèáêè
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Set fn_Files_Names_Collection = New Collection ' Ñîçäàåì êîëëåêöèþ äëÿ èìåí ôàéëîâ
    Dim objFSO As Object: Set objFSO = CreateObject("Scripting.FileSystemObject") ' Ñîçäàåì îáúåêò âçàèìîäåéñòâèÿ ñ ôàéëîâîé ñèñòåìîé
    Globals.sc_Get_Files_Names strFolder, strMask, objFSO, fn_Files_Names_Collection, lonDeep ' Ïðîèçâîäèì ïîèñê ôàéëîâ â óêàçàííîé ïàïêå, ïî óêàçàííîé ìàñêå ïîèñêà
    Set objFSO = Nothing ': Application.StatusBar = False ' îáíóëÿåì îáúåêò äëÿ î÷èñòêè ïàìÿòè

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:25:08
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_File_Open_Read_Only
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Îòêðûòü ôàéë ïîä ÷òåíèåì
' Ïàðàìåòð:     strFile {String} - Ïîëíîå óèìÿ ôàéëà
' Âåðí¸ò:       Boolean - Ðåçóëüòàò ïðîâåðêè îòêðûëñÿ ôàéë èëè íåò
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_File_Open_Read_Only(ByVal strFile As String) As Boolean

On Error GoTo fn_File_Open_Read_Only_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_File_Open_Read_Only = False

    Workbooks.Open filename:=strFile, Format:=6, Delimiter:=";", Local:=True, ReadOnly:=True ' Îòêðûâàåì ôàéë ïîä ÷òåíèåì

    fn_File_Open_Read_Only = True

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_File_Open_Read_Only_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_File_Open_Read_Only", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:50:25
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Get_Edges
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Îïðåäåëèòü ãðàíèöû òàáëèöû
' Ïàðàìåòð:     wshSheet {Worksheet} - Ëèñò ñ êîòîðûì áóäåì âçàèìîäåéñòâîâàòü
' Ïàðàìåòð:     strName {String} - Èìÿ êîëîíêè ïî êîòîðîé áóäåì îïðåäåëÿòü ãðàíèöó. Íå äîëæíà ñîäåðæàòü ïóñòûõ ñòðîê
' Âåðí¸ò:       Long() - Ìàññèâ èç 2 ýëåìåíòîâ - âåðõíÿÿ ãðàíèöà è íèæíÿÿ
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Get_Edges(ByVal wshSheet As Worksheet, _
                             ByVal strName As String) As Long()

On Error GoTo fn_Get_Edges_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim lonResult(1) As Long, lonI As Long, lCol As Long
    
    For lonI& = 1 To 1048576 ' Ïåðåáîð ñòðîê íà óêàçàííîì ëèñòå

        If Not wshSheet.Range(lonI & ":" & lonI).Find(strName, , , xlWhole) Is Nothing Then lonResult(0) = lonI: Exit For ' Èùåì â ñòðîêå íàçâàíèå êîëîíêè, ïðè íàõîæäåíèè çàïîìèíàåì íîìåð ñòðîêè è ïðåðûâàåì öèêë
    
    Next lonI
    
    lCol = wshSheet.Range(lonResult(0) & ":" & lonResult(0)).Find(strName, , , xlWhole).Column ' Èùåì íîìåð êîëîíêè
    lonResult(1) = wshSheet.Range(wshSheet.Cells(lonResult(0), lCol), wshSheet.Cells(1048576, lCol)).Find("").Row ' Èùåì ïóñòóþ ñòðîêó â ýòîé êîëîíêå

    fn_Get_Edges = lonResult

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Get_Edges_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Get_Edges", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 07:20:26
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Get_Id
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ïîëó÷èòü íîìåð ýëåìåíòà ìàññèâà ïî åãî çíà÷åíèþ
' Ïàðàìåòð:     varArray {Variant} - Ìàññèâ ýëåìåíòîâ
' Ïàðàìåòð:     strValue {String} - Èñêîìîå çíà÷åíèå
' Âåðí¸ò:       Long - Íîìåð ýëåìåíòà ìàññèâà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Get_Id(ByVal varArray As Variant, _
                          ByVal strValue As String) As Long

On Error GoTo fn_Get_Id_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Get_Id = 0
    
    Dim lonI As Long
    
    For lonI = LBound(varArray) To UBound(varArray) ' öèêë ïåðåáîðà ýëåìåíòîâ ìàññèâà

        If varArray(lonI) = strValue Then ' Ñðàâíåíèå ýëåíòà ñ èñêîìûì çíà÷åíèåì. Ïðè ñîâïàäåíèè âûõîä èç öèêëà. Èíäåêñ ýëåìåíòà óâåëè÷èâàåì íà 1 ò.ê. ìàññèâ íà÷èíàåòñÿ ñ 0
        
            fn_Get_Id = lonI + 1
            Exit Function
            
        End If
        
    Next lonI

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Get_Id_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Get_Id", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 07:38:52
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Option_Get
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ïîëó÷èòü ñîõðàíåííîå çíà÷åíèå îïöèè
' Ïàðàìåòð:     strOption {String} - Íàçâàíèå îïöèè
' Âåðí¸ò:       String - Çíà÷åíèå îïöèè
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Option_Get(ByVal strOption As String) As String

On Error GoTo fn_Option_Get_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Option_Get = "Îïöèÿ íå ïîëó÷åíà!" ' Çíà÷åíèå ïî óìîë÷àíèþ

    fn_Option_Get = Worksheets("Îïöèè").Cells(Worksheets("Îïöèè").Range("A:A").Find(strOption, , , xlWhole).Row, 2).Value ' Ïîèñê çíà÷åíèÿ

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Option_Get_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Option_Get", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 07:46:13
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Option_Set
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ñîõðàíèòü çíà÷åíèå îïöèè
' Ïàðàìåòð:     strOption {String} - Èìÿ îïöèè
' Ïàðàìåòð:     strValue {String} - Çíà÷åíèå îïöèè
' Âåðí¸ò:       Boolean - True/False âçàâèñèìîñòè îò òîãî óäàëîñü ñîõðàíèòü èëè íåò
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Option_Set(ByVal strOption As String, _
                              ByVal strValue As String) As Boolean

On Error GoTo fn_Option_Set_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Option_Set = False ' Çíà÷åíèå ïî óìîë÷àíèþ
    
    Dim booCheck As Boolean, lonRow As Long
    
    booCheck = fn_Sheet_Check("Îïöèè") ' Ïðîâåðÿåì ÷òî ëèñò ñ îïöèè ñóùåñòâóåò
    
    If Not booCheck Then sc_Option_Create_Sheet ' Åñëè ëèñò îïöèé íå ñóùåñòâóåò òî ñîçäàåì åãî

    If Not Worksheets("Îïöèè").Range("A:A").Find(strOption, , , xlWhole) Is Nothing Then ' Ïîèñê òàêîé îïöèè
    
        Worksheets("Îïöèè").Cells(Worksheets("Îïöèè").Range("A:A").Find(strOption, , , xlWhole).Row, 2).Value = strValue ' Åñëè îïöèÿ íàéäåíà, òî ïðèñâàåâàåì íîâîå çíà÷íèå
        
    Else
    
        lonRow = Worksheets("Îïöèè").Range("A:A").Find("", , , xlWhole).Row ' Åñëè îïöèÿ íå íàéäåíà, èùåì ïóñòóþ ñòðîêó
        Worksheets("Îïöèè").Cells(lonRow, 1).Value = strOption ' Âïèñûâàåì íàçâàíèå îïöèè
        Worksheets("Îïöèè").Cells(lonRow, 2).Value = strValue ' Âïèñûâàåì çíà÷åíèå îïöèè
        
    End If

    fn_Option_Set = True ' Âîçâðàùàåì ïîëîæèòåëüíîå çíà÷åíèå

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Option_Set_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Option_Set", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 07:54:22
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Refresh_Data
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Îáíîâèòü ïîäêëþ÷åííóþ òàáëèöó ñ äàííûìè
' Ïàðàìåòð:     wshSheet {Worksheet} - Ëèñò íà êîòîðîì îáíîâëÿåìàÿ òàáëèöà
' Ïàðàìåòð:     strTable {String} - Îáíîâëÿåìàÿ òàáëèöà
' Ïàðàìåòð:     strOption {String} - Íàçâàíèå îïöèè êîòîðàÿ õðàíèò âðåìÿ ïîñëåäíåãî îáíîâëåíèÿ
' Ïàðàìåòð:     o_strTime {String} - Êîíòðîëüíîå âðåìÿ îáíîâëåíèÿ; Ïî óìîë÷àíèþ: "09:00:00"
' Âåðí¸ò:       Boolean - True/False â çàâèñèìîñòè îò òîãî óäàëîñü ëè îáíîâèòü èëè íåò
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Refresh_Data(ByVal wshSheet As Worksheet, _
                                ByVal strTable As String, _
                                ByVal strOption As String, _
                                Optional ByVal o_strTime As String = "09:00:00") As Boolean

On Error GoTo fn_Refresh_Data_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Refresh_Data = False ' Çíà÷åíèå ïî óìîë÷àíèþ

    Dim strMark As String, booCheck As Boolean, booTime As Boolean
    
    strMark = fn_Option_Get(strOption) ' Ïîëó÷àåì îïöèþ - âðåìÿ ïîñëåäíåãî îáíîâëåíèÿ
    
    If CDate(strMark) < Date Or (CDate(Now - Date) > CDate(o_strTime) And CDate(strMark) < CDate(o_strTime)) Then ' Ñðàâíèâàåì êîíòðîëüíîå âðåìÿ ñî âðåìåíåì ïîñëåäíåíãî îáíîâëåíèÿ
    
        wshSheet.Visible = xlSheetVisible ' Äåëàåì ëèñò ñ êîòîðûì áóäåì âçàèìîäåéñòâîâàòü âèäèìûì
        wshSheet.Activate ' Ïåðåõîäèì íà ýòîò ëèñò
        booCheck = Globals.fn_Refresh_Table(Range(strTable).ListObject.QueryTable) ' Îáíîâëÿåì òàáëèöó
        
        If booCheck Then ' Ïðîâåðÿåì ÷òî òàáëèöà äåéñòâèòåëüíî îáíîâèëàñü
        
            booTime = fn_Option_Set(strOption, Now()) ' Ñîõðàíÿåì âðåìÿ ïîñëåäíåãî îáíîâëåíèÿ
            
        End If
    
    End If
    
    wshSheet.Visible = xlSheetHidden ' Ñêðûâàåì ëèñò

    fn_Refresh_Data = True ' Âîçâðàùàåì ïîëîæèòåëüíîå çíà÷åíèå

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Refresh_Data_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Refresh_Data", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 08:07:02
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Refresh_Table
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Îáíîâèòü ïîäêëþ÷åííóþ òàáëèöó
' Ïàðàìåòð:     objTable {Object} - Òàáëèöà êîòîðóþ íóæíî îáíîâèòü
' Âåðí¸ò:       Boolean - True/False - â çàâèñèìîñòè îò òîãî óäàëîñü ëè îáíîâèòü òàáëèöó èëè íåò
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Refresh_Table(ByVal objTable As Object) As Boolean

On Error GoTo fn_Refresh_Table_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim bytTry As Byte: bytTry = 0 ' Ïîëå äëÿ õðàíåíèÿ ñ÷åòà êîëè÷åñòâà ïîïûòîê îáíîâëåíèÿ

    fn_Refresh_Table = False

mainaction:

    objTable.Refresh BackgroundQuery:=False ' Îáíîâëÿåì òàáëèöó

    fn_Refresh_Table = True

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Refresh_Table_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Refresh_Table", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

Application.Wait Time:=Now + TimeSerial(0, 1, 0) ' Îæèäàåì îäíó ìèíóòó
bytTry = bytTry + 1 ' Óâåëè÷èâàåì ñ÷åò÷èê ïîïûòîê
If bytTry < 5 Then GoTo mainaction ' Åñëè ñîâåðøåíî ìåíåå 5 ïîïûòîê òî ïðîáóåì åùå ðàç

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 09:34:51
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Sheet_Check
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ïðîâåðêà ñóùåñòâóåò ëè ëèñò
' Ïàðàìåòð:     strName {String} - Èìÿ ëèñòà êîòîðûé íóæíî ïðîâåðèòü
' Âåðí¸ò:       Boolean - Ðåçóëüòàò ïðîâåðêè ñóùåñòâóåò ëè ëèñò èëè íåò
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Sheet_Check(ByVal strName As String) As Boolean

On Error GoTo fn_Sheet_Check_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_Sheet_Check = False

    Dim objSheet As Worksheet: Set objSheet = Worksheets(strName)

    fn_Sheet_Check = True

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Sheet_Check_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_Sheet_Check", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 09:26:26
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Column_Check
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ïðîâåðêà êîëîíêè. Åñëè ñóùåñòâóåò - î÷èñòèòü, åñëè íå ñóùåñòâóåò - ñîçäàòü
' Ïàðàìåòð:     objSheet {Object} - Ëèñò íà êîòðîì íóæíî ïðîâåðèòü êîëîíêó
' Ïàðàìåòð:     strName {String} - Èìÿ ïðîâåðÿåìîé êîëîíêè
' Ïàðàìåòð:     lonRow {Long} - Íîìåð ñòðîêè ãäå íàõîäèòñÿ øàïêà òàáëèöû
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Column_Check(ByVal objSheet As Object, _
                           ByVal strName As String, _
                           ByVal lonRow As Long)

On Error GoTo sc_Column_Check_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

        If Not objSheet.Range(lonRow & ":" & lonRow).Find(strName, , , xlWhole) Is Nothing Then ' èùåì â óêàçàííîé ñòðîêå íóæíîå çíà÷åíèå
        
            objSheet.Range(lonRow & ":" & lonRow).Find(strName, , , xlWhole).EntireColumn.ClearContents ' Åñëè íàøëè êîëîíêó, òî ñòèðàåì âñå äàííûå èç íåå
            objSheet.Cells(lonRow, objSheet.Range(lonRow & ":" & lonRow).Find("", , , xlWhole).Column).Value = strName ' Çàíîâî âïèñûâàåì íà ëèñò èìÿ êîëîíêè
            
        Else ' Åñëè êîëîíêà íå ñóùåñòâóåò
        
            objSheet.Cells(lonRow, objSheet.Range(lonRow & ":" & lonRow).Find("").Column).Value = strName ' Èùåì â óêàçàííîé ñòðîêå ïóñòóþ ÿ÷åéêó è âïèñûâàåì èìÿ êîëîíêè
        
        End If
        
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Column_Check_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Column_Check", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 19:48:26
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Data_Manipulate
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ïîäõâàò äàííûõ ñ ëèñòà â ìàññèâ èëè âñòàâêà äàííûõ íà ëèñò
' Ïàðàìåòð:     r_varTable (Variant) - Ìàññèâ äàííûõ
' Ïàðàìåòð:     wshSheet (Worksheet) - Ëèñò ñ êîòîðûì áóäåì âçàèìîäåéñòâîâàòü
' Ïàðàìåòð:     varNames (Variant) - Ìàññèâ èìåí ñòîëáöîâ ñ êîòîðûìè áóäåì âçàèìîäåéñòâîâàòü
' Ïàðàìåòð:     varPaste (Variant) - Èìåíà ñòîëáöîâ äëÿ âñòàâêè
' Ïàðàìåòð:     varFormat (Variant) - Ôîðìàòû êîëîíîê ïðè âñòàâêå
' Ïàðàìåòð:     o_booPickup (Boolean) - True - ñ ëèñòà â ìàññèâ. False - èç ìàññèâà íà ëèñò; Ïî óìîë÷àíèþ - True
' Ïàðàìåòð:     o_booCheck (Boolean) - Ìåòêà ïðîâåðêè êîëîíêè. True - ïîðîâåðÿåì. False - íåò; Ïî óìîë÷àíèþ - False
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Data_Manipulate(ByRef r_varTable As Variant, _
                              ByVal wshSheet As Worksheet, _
                              ByVal varNames As Variant, _
                              ByVal varPaste As Variant, _
                              ByVal varFormat As Variant, _
                              Optional ByVal o_booPickup As Boolean = "True", _
                              Optional ByVal o_booCheck As Boolean = "False")

On Error GoTo sc_Data_Manipulate_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ReDim lonBorders(1) As Long: lonBorders = Globals.fn_Get_Edges(wshSheet, varNames(0)) ' Îïðåäåëÿåì ïåðâóþ è ïîñëåäíèè ñòðîêè â òàáëèöå

    Dim o_booCheckColumn As Boolean, lonI As Long
    
    For lonI = LBound(r_varTable) To UBound(r_varTable) ' Ïåðåáîð ñòîëáöîâ
        
        o_booCheckColumn = False ' Ñòàâèì ìåòêó ÷òî êîëîíêó ïðîâåðÿòü íå íóæíî
        Dim sFormat As String: sFormat = "-" ' Ôîðìàò ïî óìîë÷àíèþ íå ìåíÿåì
        Dim lId As Long: lId = Globals.fn_Get_Id(varPaste, varNames(lonI - 1)) - 1 ' Ïîëó÷àåì èíäåêñ èìåíè êîëîíêè â ñïèñêå ðàñ÷åòíûõ êîëîíîê
        
        If lId > -1 Then ' Ñðàâíèâàåì èìÿ îáðàáàòûâàåìîé êîëîíêè ñî ñïèñêîì ðàñ÷åòíûõ êîëîíîê
        
            If o_booCheck Then o_booCheckColumn = True ' Åñëè ñòîèò ìåòêà î íåîáõîäèìîñòè ïðîâåðêè êîëîêíêè òî ñòàâèì ìåòêó ïðîâåðêè êîëîíêè
            If Not o_booPickup Then sFormat = varFormat(lId) ' Åñëè ýòî âñòàâêà äàííûõ, òî óêàçûâàåì ôîðìàò âñòàâêè äàííûõ
            
        End If
        
        If o_booPickup Then ' Ïðîâåðÿåì êàêîå äåéñòâèå íóæíî ñîâåðøèòü
        
            r_varTable(lonI) = Globals.fn_Data_Get(wshSheet, lonBorders(0), lonBorders(1), varNames(lonI - 1), o_booCheckColumn) ' Îòïðàâëÿåì äàííûå ñ ëèñòà â ìàññèâ
            
        Else ' Åñëè äàííûå íóæíî âñòàâèòü íà ëèñò
        
            Call Globals.sc_Data_Set(wshSheet, lonBorders(0), varNames(lonI - 1), r_varTable(lonI), sFormat, o_booCheckColumn) ' Âñòàâëÿåì äàííûå íà ëèñò
            
        End If
    
    Next lonI
    
    If Not o_booPickup Then Call Globals.sc_Delete_Fantom_Row(wshSheet, varNames(0)) ' Ñòèðàåì ïîñëåäíþþ ïóñòóþ ñòðîêó êîòîðàÿ ïîÿâëÿåòñÿ ïîñëå âñòàâêè äàííûõ íà ëèñò
    
    Erase lonBorders

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Data_Manipulate_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Data_Manipulate", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 19:56:49
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Data_Set
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Âñòàâêà äàííûõ íà ëèñò
' Ïàðàìåòð:     wshSheet (Worksheet) - Ëèñò ñ êîòîðûì áóäåì âçàèìîäåéñòâîâàòü
' Ïàðàìåòð:     lonStart (Long) - Ïåðâàÿ ñòðîêà ñ êîòîðîé íà÷èíàåòñÿ òàáëèöà
' Ïàðàìåòð:     strName (String) - Èìÿ êîëîíêè äëÿ âñòàâêè äàííûõ
' Ïàðàìåòð:     varTable (Variant) - Ìàññèâ äëÿ âñòàâêè
' Ïàðàìåòð:     strFormat (String) - Ôîðìàò âñòàâêè
' Ïàðàìåòð:     o_booCheck (Boolean) - Ìåòêà ïðîâåðêè êîëîíêè; Ïî óìîë÷àíèþ - False
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Data_Set(ByVal wshSheet As Worksheet, _
                       ByVal lonStart As Long, _
                       ByVal strName As String, _
                       ByVal varTable As Variant, _
                       ByVal strFormat As String, _
                       Optional ByVal o_booCheck As Boolean = False)

On Error GoTo sc_Data_Set_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    If o_booCheck Then Call Globals.sc_Column_Check(wshSheet, strName, lonStart)  ' Ïðîâåðÿåì êîëîíêó åñëè ìåòêà = True

    Dim bFormatMark As Boolean: bFormatMark = False
    Dim sNewFormat As String: sNewFormat = "@"
    
    Dim lColumnNum As Long: lColumnNum = wshSheet.Range(lonStart & ":" & lonStart).Find(strName, , , xlWhole).Column ' Èùåì íîìåð êîëîíêè êóäà áóäåì âñòàâëÿòü äàííûå
    
    Select Case strFormat ' Ïðîâåðÿåì ôîðìàò âñòàâëÿåìûõ äàííûõ7
    
            Case "Text" ' Òåêñòîâûé ôîðìàò
                    sNewFormat = "@"
                    bFormatMark = True
                    
            Case "All" ' Îáùèé ôîðìàò
                    sNewFormat = "General"
                    bFormatMark = True
                    
            Case "Number" ' Öåëûå ÷èñëà
                    sNewFormat = "0"
                    bFormatMark = True
                    
            Case "0.00" ' ×èñëà äî ñîòûõ
                    sNewFormat = "0.00"
                    bFormatMark = True
                    
            Case "Date" ' Äàòà
                    sNewFormat = "m/d/yyyy"
                    bFormatMark = True
                    
            Case "Money" ' Ôèíàíñîâûé
                    sNewFormat = "_($* #,##0.00_);_($* (#,##0.00);_($* ""-""??_);_(@_)"
                    bFormatMark = True
                    
    End Select
        
    If bFormatMark Then wshSheet.Range(wshSheet.Cells(lonStart, lColumnNum), wshSheet.Cells(lonStart + UBound(varTable) - 1, lColumnNum)).NumberFormat = sNewFormat ' äèàïàçîí êóäà áóäåì âñòàâëÿòü ïðåîáðàçóåì â íóæíûé ôîðìàò
    wshSheet.Range(wshSheet.Cells(lonStart, lColumnNum), wshSheet.Cells(lonStart + UBound(varTable) - 1, lColumnNum)) = varTable ' âñòàâëÿåì äàííûå

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Data_Set_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Data_Set", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 20:17:50
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Delete_Fantom_Row
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Óäàëèòü ïóñòóþ ñòðîêó â òàáëèöå êîòîðàÿ íåèçáåæíî âîçíèêàåò ïðè âñòàâêå äàííûõ ÷åðåç [Data_Set]
' Ïàðàìåòð:     wshSheet {Worksheet} - Ëèñò ñ êîòîðûì áóäåì âçàèìîäåéñòâîâàòü
' Ïàðàìåòð:     strName {String} - Èì êîëîíêè ïî êîòîðîé áóäåò îïðåäåëÿòüñÿ ãðàíèöà òàáëèöû. Íå äîëæíî ñîäåðàæàòü ïóñòûõ ñòðîê è æåäàòåëüíî íå áûòü ïåðâîé íà ëèñòå
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Delete_Fantom_Row(ByVal wshSheet As Worksheet, _
                                ByVal strName As String)

On Error GoTo sc_Delete_Fantom_Row_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim lonI As Long, lonColumn As Long, lonFantom As Long

    For lonI = 1 To 1048576 ' Ïåðåäèðàåì ñòðîêè ëèñòà

        If Not wshSheet.Range(lonI & ":" & lonI).Find(strName, , , xlWhole) Is Nothing Then Exit For ' Êîãäà â ñòðîêå íàõîäèì èñêîìóþ êîëîíêó ïðåðûâàåì öèêë
    
    Next lonI
    
    lonColumn = wshSheet.Range(lonI & ":" & lonI).Find(strName, , , xlWhole).Column ' Íàäèì íîìåð êîëîíêè ïî êîòîðîé îïðåäåëèì ãðàíèöû òàáëèöû
    lonFantom = wshSheet.Range(wshSheet.Cells(lonI, lonColumn), wshSheet.Cells(1048576, lonColumn)).Find("").Row ' Íàõîäèì ôàíòîìíóþ ñòðîêó
    wshSheet.Rows(lonFantom & ":" & lonFantom).Delete Shift:=xlUp ' Óäàëÿåì ôàíòîìíóé ñòðîêó

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Delete_Fantom_Row_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Delete_Fantom_Row", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 20:25:35
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Error_Logger
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ëîãèðîâàíèå îøèáîê
' Ïàðàìåòð:     objError {Object} - Îáúåêò îøèáêè
' Ïàðàìåòð:     strModule {String} - Èìÿ ìîäóëÿ ãäå ïðîèçîøëà îøèáêà
' Ïàðàìåòð:     strMethod {String} - Èìÿ îáúåêòà ãäå ïðîèçîøëà îøèáêà
' Ïàðàìåòð:     o_douVersion {Double} - Íîìåð âåðñèè ìîäóëÿ ; Ïî óìîë÷àíèþ: "0"
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Error_Logger(ByVal objError As Object, _
                           ByVal strModule As String, _
                           ByVal strMethod As String, _
                           Optional ByVal o_douVersion As Double = "0")

'On Error Resume Next ' Èãíîðèðîâàíèå îøèáêè
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim strText As String, strFile As String
    
    strText = Now() & vbTab & ActiveWorkbook.Name & vbTab & Environ("COMPUTERNAME") & vbTab & Environ("USERNAME") & vbTab & strModule & vbTab & o_douVersion & vbTab & strMethod & vbTab & objError.Number & vbTab & Replace(objError.Description, vbNewLine, " | ") & vbTab & objError.Source
    
    strFile = ThisWorkbook.Path & "\Æóðíàë îøèáîê.txt"
    
    Call Globals.sc_String_In_TXT(strText, strFile)

    Err.Clear

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:13:26
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_File_Delete
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Óäàëèòü óêàçàííûé ôàéë
' Ïàðàìåòð:     strFile {String} - Ïîëíîå èìÿ ôàéëà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_File_Delete(ByVal strFile As String)

On Error GoTo sc_File_Delete_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Kill strFile ' Óäàëÿåì ôàéë

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_File_Delete_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_File_Delete", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:15:50
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_File_Done
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ïåðåèìåíîâàòü îáðàáîòàííûé ôàéë
' Ïàðàìåòð:     strFile {String} - Ïîëíîå èìÿ ôàéëà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_File_Done(ByVal strFile As String)

On Error GoTo sc_File_Done_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim strNew As String
    
    strNew = Left(strFile, Len(strFile) - InStr(StrReverse(strFile), "\")) & "\" & Environ("USERNAME") & " " & Right(strFile, InStr(StrReverse(strFile), "\") - 1) ' Íîâîå èìÿ ôàéëà
    
    Name strFile As strNew ' Ïåðåèìåíîâûâàåì âñòàâëÿÿ â íà÷àëî èìåíè ôàéëà - èìÿ þçåðà îáðàáîòàâøåãî ôàéë

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_File_Done_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_File_Done", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:28:44
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Filters_Off_All
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ñíÿòü âñå ôèëüòðà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Filters_Off_All()

On Error GoTo sc_Filters_Off_All_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    If ActiveSheet.FilterMode Then ActiveSheet.ShowAllData

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Filters_Off_All_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Filters_Off_All", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:46:31
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Filter_Set
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Óñòàíîâèòü ôèëüòð â àêòèâíîé êîëîíêå ïî ñïèñêó çíà÷åíèé
' Ïàðàìåòð:     r_strValues() {String} - Ìàññèâ çíà÷åíèé ôèëüòðà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Filter_Set(ByRef r_strValues() As String)

On Error GoTo sc_Filter_Set_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ActiveSheet.UsedRange.AutoFilter Field:=ActiveCell.Column, Criteria1:=r_strValues, Operator:=xlFilterValues ' Ñòàâèì ôèëüòð

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Filter_Set_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Filter_Set", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 06:59:27
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Get_Files_Names
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ïîëó÷èòü ñïèñîê ôàéëîâ
' Ïàðàìåòð:     strFolder {String} - Ïàïêà â êîòîðîé íóæíî ïðîèçâåñòè ïîèñê
' Ïàðàìåòð:     strMask {String} - Ìàñêà ïîèñêà
' Ïàðàìåòð:     r_objFso {Object} - Îáúåêò âçàèìîäåéñòâèÿ ñ ôàéëîâîé ñèñòåìîé
' Ïàðàìåòð:     r_colFiles {Collection} - Êîëëåêöèÿ èìåí ôàéëîâ
' Ïàðàìåòð:     intDeep {Integer} - Ãëóáèíà ïîèñêà â ïîäïàïêàõ
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Get_Files_Names(ByVal strFolder As String, _
                              ByVal strMask As String, _
                              ByRef r_objFso As Object, _
                              ByRef r_colFiles As Collection, _
                              ByVal intDeep As Integer)

On Error Resume Next ' Èãíîðèðîâàíèå îøèáêè
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim objCurFold As Object, objFile As Object, objFol As Object
    
    Set objCurFold = r_objFso.GetFolder(strFolder)
    
    If Not objCurFold Is Nothing Then ' Ïðîâåðÿåì ÷òî ïàïêà ñóùåñòâóåò è â íåé åñòü ÷òî-òî
    
        For Each objFile In objCurFold.Files ' Ïåðåáîð ýëåìååòîâ â ïàïêå
        
            If objFile.Path Like "*" & strMask & "*" Then r_colFiles.Add objFile.Path ' Ñðàâíåíèå íàéäåíîãî ýëåìåíòà ñ ìàñêîé ïîèñêà
            
        Next
        
        intDeep = intDeep - 1 ' Óìåíüøàåì ãëóáèíó ïîèñêà
        
        If intDeep Then
        
            For Each objFol In objCurFold.SubFolders
            
                sc_Get_Files_Names objFol.Path, strMask, r_objFso, r_colFiles, intDeep
                
            Next
            
        End If
        
        Set objFile = Nothing: Set objCurFold = Nothing: Set objFol = Nothing ' Óäàëÿåì îáúåêòû î÷èùàåì ïàìÿòü
        
    End If

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 07:33:02
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Option_Create_Sheet
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ñîçäàòü ëèñò îïöèé
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Option_Create_Sheet()

On Error GoTo sc_Option_Create_Sheet_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Worksheets.Add.Name = "Îïöèè" ' Ñîçäàåì ëèñò
    Worksheets("Îïöèè").Range("A1:B1") = Array("Îïöèÿ", "Çíà÷åíèå") ' Ñîçäàåì òàáëèöó îïöèé
    Worksheets("Îïöèè").Visible = False ' Ñêðûâàåì ëèñò

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Option_Create_Sheet_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Option_Create_Sheet", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 08:28:30
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Screen_Updating
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Âêëþ÷åíèå/Îòêëþ÷åíèå îáíîâëåíèÿ ýêðàíà
' Ïàðàìåòð:     booAct {Boolean} - Âûïîëíÿåìîå äåéñòâèå. True - âêëþ÷èòü îáíîâëåíèå. False - îòêëþ÷àåì
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Screen_Updating(ByVal booAct As Boolean)

On Error GoTo sc_Screen_Updating_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Application.ScreenUpdating = booAct
    Application.ShowWindowsInTaskbar = booAct
    Application.AskToUpdateLinks = booAct
    Application.DisplayAlerts = booAct
    Application.EnableEvents = booAct
    Application.DisplayStatusBar = booAct
    
    If booAct Then
    
        Application.EnableCancelKey = xlInterrupt
        Application.Calculation = xlCalculationAutomatic
        Application.DisplayCommentIndicator = xlCommentAndIndicator
        
    Else
    
        Application.EnableCancelKey = xlDisabled
        Application.Calculation = xlCalculationManual
        Application.DisplayCommentIndicator = xlNoIndicator
        
    End If

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Screen_Updating_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Screen_Updating", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.05 19:17:30
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Sheet_Clear
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Î÷èñòêà óêàçàííîãî ëèñòà
' Ïàðàìåòð:     objSheet {Object} - Ëèñò íà êîòîðîì áóäåì óäàëÿòü äàííûå
' Ïàðàìåòð:     lonRow {Long} - Íîìåð ñòðîêè ñ êîòîðîé áóäåì î÷èùàòü
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Sheet_Clear(ByVal objSheet As Object, _
                          ByVal lonRow As Long)

On Error GoTo sc_Sheet_Clear_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    lonRow = IIf(objSheet.UsedRange.Rows.Count > lonRow, objSheet.UsedRange.Rows.Count, lonRow + 1)
    objSheet.Rows(lonRow & ":" & lonRow).Delete Shift:=xlUp

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Sheet_Clear_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Sheet_Clear", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.06 08:31:29
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_String_In_TXT
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Çàïèñàòü ñòðîêó â òåêñòîâûé ôàéë
' Ïàðàìåòð:     strText {String} - Çàïèñûâàåìàÿ ñòðîêà
' Ïàðàìåòð:     strFile {String} - Ïîëíîå èìÿ ôàéëà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_String_In_TXT(ByVal strText As String, _
                            ByVal strFile As String)

'On Error Resume Next: Exit Sub ' Âûõîä èç ïðîöåäóðû
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim objFSO As Object, objTextFile As Object
    
    Set objFSO = CreateObject("scripting.filesystemobject") ' Ñîçäàåì îáúåêò âçàèìîåéñòâèÿ ñ ôàéëîâîé ñèñòåìîé
    Set objTextFile = objFSO.OpenTextFile(strFile, 8, True) ' Îòêðûâàåì ôàéë
    
    objTextFile.Write vbNewLine & strText: objTextFile.Close ' Çàïèñûâàåì ñòðîêó
    
    Set objTextFile = Nothing: Set objFSO = Nothing ' ×èñòèì ïàìÿòü

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.07 08:24:09
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_File_Exists
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ïðîâåðèòü ñóùåñòâóåò ëè ôàéë
' Ïàðàìåòð:     strFile {String} - Ïîëíîå èìÿ ôàéëà
' Âåðí¸ò:       Boolean - True/False, â çàâèñèìîñòè îò òîãî ñóùåñòâóåò ëè ôàéë
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_File_Exists(ByVal strFile As String) As Boolean

On Error GoTo fn_File_Exists_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    fn_File_Exists = Len(Dir(strFile)) > 0 ' Ïðîâåðÿåì ñóùåñòâóåò ëè ôàéë

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_File_Exists_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "fn_File_Exists", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.07 17:15:31
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Clipboard_Send
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Îòïðàâèòü äàííûå â áóôåð îáìåíà
' Ïàðàìåòð:     strText {String} - Òåêñò îòïðàâëÿåìûé â áóôåð
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Clipboard_Send(ByVal strText As String)

On Error GoTo sc_Clipboard_Send_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    Dim objClip As Object: Set objClip = GetObject("New:1C3B4210-F441-11CE-B9EA-00AA006B1A69")
    objClip.SetText strText: objClip.PutInClipboard

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Clipboard_Send_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Clipboard_Send", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Àâòîð:        Øåâ÷åíêî
' Ñîçäàíî:      31.03.2020 07:33
' Íàçâàíèå:     fn_Unique_Values
' Îïèñàíèå:     Âûáðàòü èç óêàçàíîãî äèàïàçîíà óíèêàëüíûå çíà÷åíèÿ
' Òèï:          Function
' Äîñòóï:       Public
' Âîçâðàùàåò:   Variant()
' objRange (Range): Äèàïàçîí èç êîòîðîãî âûáèðàòü óíèêàëüíûå çíà÷åíèÿ
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Unique_Values(ByVal objRange As Range) As Variant()

    Dim vResult() As Variant, lIndex As Long, sText As String, vTemp As Variant
    vResult = Intersect(objRange.Parent.UsedRange, objRange).Value
    
    On Error Resume Next: Err.Clear
    
    With New Collection
    
        For Each vTemp In vResult()
        
            If TypeName(vTemp) = "Boolean" Then vTemp = IIf(vTemp, "ÈÑÒÈÍÀ", "ËÎÆÜ")
        
            sText = Trim(vTemp)
            
            If Len(sText) > 0 Then
            
              If IsEmpty(.Item(sText)) Then
              
                For lIndex = 1 To .Count
                
                  If sText < .Item(lIndex) Then Exit For
                  
                Next
                
                  If lIndex > .Count Then .Add sText, sText Else .Add sText, sText, Before:=lIndex
                  
              End If
              
            End If
            
        Next
        
        ReDim vResult(1 To .Count)
        
        For lIndex = 1 To .Count
        
            vResult(lIndex) = .Item(lIndex)
            
        Next
        
    End With

    fn_Unique_Values = vResult

End Function

' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.12 10:37:28
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Week_Day_Name
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ïîëó÷èòü èìÿ äíÿ íåäåëè íà ðóññêîì ïî íîìåðó
' Ïàðàìåòð:     bytDay {Byte} - Íîìåð äíÿ íåäåëè îò 1 äî 7
' Âåðí¸ò:       String - Äåíü íåäåëè
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Week_Day_Name(ByVal bytDay As Byte) As String

On Error GoTo fn_Week_Day_Name_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ReDim strArray(1 To 7) As String
    strArray(1) = "Ïîíåäåëüíèê"
    strArray(2) = "Âòîðíèê"
    strArray(3) = "Ñðåäà"
    strArray(4) = "×åòâåðã"
    strArray(5) = "Ïÿòíèöà"
    strArray(6) = "Ñóááîòà"
    strArray(7) = "Âîñêðåñåíüå"
    
    fn_Week_Day_Name = strArray(bytDay)

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Week_Day_Name_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

fn_Week_Day_Name = CStr(bytDay)

End Function
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.12 10:50:11
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     fn_Month_Name
' Òèï:          Function
' Äîñòóï:       Public
' Îïèñàíèå:     Ïîëó÷èòü Ðóññêîå íàçâàíèå ìåñÿöà ïî åãî íîìåðó
' Ïàðàìåòð:     bytMonth {Byte} - Íîìåð ìåñÿöà îò 1 äî 12
' Âåðí¸ò:       String - Èìÿ ìåñÿöà
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Function fn_Month_Name(ByVal bytMonth As Byte) As String

On Error GoTo fn_Month_Name_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -

    ReDim strArray(1 To 12) As String
          strArray(1) = "ßíâàðü"
          strArray(2) = "Ôåâðàëü"
          strArray(3) = "Ìàðò"
          strArray(4) = "Àïðåëü"
          strArray(5) = "Ìàé"
          strArray(6) = "Èþíü"
          strArray(7) = "Èþëü"
          strArray(8) = "Àâãóñò"
          strArray(9) = "Ñåíòÿáðü"
          strArray(10) = "Îêòÿáðü"
          strArray(11) = "Íîÿáðü"
          strArray(12) = "Äåêàáðü"
          
    fn_Month_Name = strArray(bytMonth)

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Function ' Çàâåðøåíèå ðàáîòû

fn_Month_Name_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

fn_Month_Name = CStr(bytMonth)

End Function
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
' Ñîçäàíî:      2020.04.12 17:16:20
' Ñîçäàòåëü:    Øåâ÷åíêî Äìèòðèé <primalevil@gmail.com>
' Íàçâàíèå:     sc_Create_Folder
' Òèï:          Sub
' Äîñòóï:       Public
' Îïèñàíèå:     Ñîçäàòü ïàïêó
' Ïàðàìåòð:     strPath {String} - Ïóòü ê ïàïêå
' - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
Public Sub sc_Create_Folder(ByVal strPath As String)

On Error GoTo sc_Create_Folder_Error ' Ïðè îøèáêå ïåðåõîä ïî ìåòêå
' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Dim objFSO As Object
Dim varTemp As Variant
Dim intI As Integer
Dim strTemp As String

    Set objFSO = CreateObject("Scripting.FileSystemObject")

    varTemp = Split(strPath, "\")
    strTemp = ""
    
    For intI = 0 To UBound(varTemp)
        If varTemp(intI) <> "" Then
            strTemp = strTemp & varTemp(intI) & "\"
                If objFSO.FolderExists(strTemp) = False Then MkDir strTemp
        End If
    Next

' -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
Exit Sub ' Çàâåðøåíèå ðàáîòû

sc_Create_Folder_Error: ' Èíñòðóêöèè ÷òî äåëàòü ïðè îøèáêå

Call Globals.sc_Error_Logger(Err, "Globals", "sc_Create_Folder", MODULEVERSION)  ' Âûçîâ îáðàáîò÷èêà îøèáîê

End Sub
